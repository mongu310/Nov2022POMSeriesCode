^54dc4ca (unknown           2023-08-08 09:23:41 -0400   1) package com.qa.opencart.factory;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400   2) 
^54dc4ca (unknown           2023-08-08 09:23:41 -0400   3) import java.io.File;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400   4) import java.io.FileInputStream;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400   5) import java.io.FileNotFoundException;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400   6) import java.io.IOException;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400   7) import java.util.Properties;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400   8) 
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400   9) import org.aspectj.util.FileUtil;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  10) import org.openqa.selenium.OutputType;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  11) import org.openqa.selenium.TakesScreenshot;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  12) import org.openqa.selenium.WebDriver;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  13) import org.openqa.selenium.chrome.ChromeDriver;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  14) import org.openqa.selenium.edge.EdgeDriver;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  15) import org.openqa.selenium.firefox.FirefoxDriver;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  16) import org.openqa.selenium.io.FileHandler;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  17) import org.openqa.selenium.safari.SafariDriver;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  18) 
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400  19) import com.qa.opencart.exception.FrameworkException;
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400  20) 
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  21) public class DriverFactory {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  22) 
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  23) 	public WebDriver driver;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  24) 	public Properties prop;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  25) 	public OptionsManager optionsManager;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  26) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  27) 	public static String highlight;// dont have 
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  28) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  29) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  30) 	public static ThreadLocal<WebDriver> tlDriver = new ThreadLocal<WebDriver>();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  31) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  32) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  33) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  34) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  35) 	/**
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  36) 	 * this method is initializing the driver on the basis of the given browser name
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  37) 	 * @param browserName
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  38) 	 * @return this returns the driver
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  39) 	 */
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  40) 	public WebDriver initDriver(Properties prop) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  41) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  42) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  43) 		optionsManager = new OptionsManager(prop);
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  44) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  45) 		highlight = prop.getProperty("highlight").trim();// dont have
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  46) 		String browserName = prop.getProperty("browser").trim().toLowerCase();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  47) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  48) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  49) 		System.out.println("browser name is : " + browserName);
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  50) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  51) 		if(browserName.equalsIgnoreCase("chrome")) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  52) 			
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  53) 			//driver = new ChromeDriver(optionsManager.getChromeOptions());
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  54) 			tlDriver.set(new ChromeDriver(optionsManager.getChromeOptions()));
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  55) 			
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  56) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  57) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  58) 		else if(browserName.equalsIgnoreCase("firefox")) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  59) 			//driver = new FirefoxDriver(optionsManager.getFirefoxOptions());
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  60) 			tlDriver.set(new FirefoxDriver(optionsManager.getFirefoxOptions()));
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  61) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  62) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  63) 		else if(browserName.equalsIgnoreCase("safari")) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  64) 			//driver = new SafariDriver();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  65) 			tlDriver.set(new SafariDriver());
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  66) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  67) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  68) 		else if(browserName.equalsIgnoreCase("edge")) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  69) 			//driver = new EdgeDriver(optionsManager.getEdgeOptions());
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  70) 			tlDriver.set(new EdgeDriver(optionsManager.getEdgeOptions()));
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  71) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  72) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  73) 		else {
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400  74) 			System.out.println("pls pass the right browser name...." + browserName);
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400  75) 			throw new FrameworkException("NO BROWSER FOUND EXCEPTION");
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  76) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  77) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  78) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  79) 		getDriver().manage().deleteAllCookies();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  80) 		getDriver().manage().window().maximize();
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400  81) 		getDriver().get(prop.getProperty("url").trim());
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  82) 		return getDriver();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  83) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  84) 	}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  85) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  86) 	/*
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  87) 	 * get the local thread copy of the driver
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  88) 	 */
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  89) 	public synchronized static WebDriver getDriver() {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  90) 		return tlDriver.get();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  91) 	}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  92) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  93) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  94) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  95) 	/**
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  96) 	 * this method is reading the properties from the .properties file
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  97) 	 * @return
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  98) 	 */
^54dc4ca (unknown           2023-08-08 09:23:41 -0400  99) 	public Properties initProp() {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 100) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 101) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 102) 		//maven clean install -Denv="stage"
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 103) 		//maven clean install 
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 104) 		prop = new Properties();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 105) 		FileInputStream ip = null;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 106) 
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 107) 
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 108) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 109) 		String envName = System.getProperty("env");
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 110) 		System.out.println("Running test cases on Env: " + envName);
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 111) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 112) 		try {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 113) 		if(envName == null ) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 114) 			System.out.println("no env is passes....");
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 115) 			 ip = new FileInputStream("./src/test/resources/config/qa.config.properties");
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 116) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 117) 		else {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 118) 			switch (envName.toLowerCase().trim()) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 119) 			case "qa":
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 120) 				 ip = new FileInputStream("./src/test/resources/config/config.properties");
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 121) 				break;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 122) 			case "stage":
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 123) 				 ip = new FileInputStream("./src/test/resources/config/stage.config.properties");
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 124) 				break;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 125) 			case "dev":
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 126) 				 ip = new FileInputStream("./src/test/resources/config/dev.config.properties");
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 127) 				break;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 128) 			case "prod":
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 129) 				 ip = new FileInputStream("./src/test/resources/config/config.properties");
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 130) 				break;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 131) 
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 132) 			default:
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 133) 				System.out.println("Wrong env is passed... No need to run the test cases....");
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400 134) 				throw new FrameworkException("WRONG ENV IS PASSES....");
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400 135) 				//break; // no need if there is a throw
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 136) 			}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 137) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 138) 		} catch(FileNotFoundException e) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 139) 			
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 140) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 141) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 142) 		try {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 143) 			prop.load(ip);
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 144) 		} catch (IOException e) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 145) 			e.printStackTrace();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 146) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 147) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 148) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 149) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 150) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 151) 		return prop;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 152) 		
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 153) 	}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 154) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 155) 	/*
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 156) 	 * take screenshot
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 157) 	 */
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 158) 	public static String getScreenshot() {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 159) 		File scrFile = ((TakesScreenshot)getDriver()).getScreenshotAs(OutputType.FILE);
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 160) 		String path = System.getProperty("user.dir")+"/screenshot/"+System.currentTimeMillis()+".png";
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 161) 		File destination = new File(path);
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 162) 		try {
00000000 (Not Committed Yet 2023-08-09 14:41:52 -0400 163) 			FileUtil.copyFile(scrFile, destination);
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 164) 		} catch (IOException e) {
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 165) 			e.printStackTrace();
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 166) 		}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 167) 		return path;
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 168) 	}
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 169) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 170) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 171) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 172) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 173) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 174) 	
^54dc4ca (unknown           2023-08-08 09:23:41 -0400 175) }
